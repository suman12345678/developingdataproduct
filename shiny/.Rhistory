x1<-rnorm(n)
x2<-rnorm(n)
x3<-rnorm(n)
y<-x1+x2+x3+rnorm(n,sd=.1)
y
plot(y,x1)
plot(y,x2)
plot(y,x3)
coef(lm(y~x1+x2+x3-1))
e<-function(a,b) a-sum(a*b)/sum(b^2)*b
ey<-e(e(y,x2),e(x3,x2))
ex<-e(e(x,x2),e(x3,x2))
ex<-e(e(x1,x2),e(x3,x2))
sum(ey*ex)/sum(ex^2)
y=x+sin(x)
x
x
x=1
y=x+sin(x)
x=c(1,2,3,4,1,2,3,8,5,2,2,3)
y=x+sin(x)
plot(y,x)
y1<-resid(lm(y~x))
plot(y1,x)
plot(x,y1)
plot(y1,x)
plot(x,y1)
plot(y,x)
plot(x,y)
n<-100
x<-rnorm(n)
x2<-rnorm(n)
x3<-rnorm(n)
e<-function(a,b) a-sum(a*b)/sum(b^2)*b
ey<-e(e(y,x3),e(x2,x3))
ex<-e(e(x,x3),e(x2,x3))
sum(ey*ex)/sum(ex^2)
coef(lm(y~x+x2+x3-1))
n
ey<-e(e(y,x3),e(x2,x3))
ey<-e(e(y,x2),e(x3,x2))
e<-function(a,b) {a-(sum(a*b)/sum(b^2))*b}
ey<-e(e(y,x2),e(x3,x2))
n<-100
x<-rnorm(n)
y<-x+x2+x3+rnorm(n,sd=.1)
ey<-e(e(y,x3),e(x2,x3))
ex<-e(e(x,x3),e(x2,x3))
sum(ey*ex)/sum(ex^2)
coef(lm(y~x+x2+x3-1))
ey<-e(e(x3,y),e(x2,x3))
ex<-e(e(x,x3),e(x2,x3))
sum(ey*ex)/sum(ex^2)
e(x3,y)
x4<-rnorm(n)
y<-x+x2+x3+x4+rnorm(n,sd=.1)
coef(lm(y~x+x2+x3+x4-1))
ey<-e(e(y,x3),e(x3,x2)),e((y,x4),e(x4,x2)))
ey<-e(e(y,x3),e(x3,x2)),e(e(y,x4),e(x4,x2)))
ey<-e(e(e(y,x3),e(x3,x2)),e(e(y,x4),e(x4,x2))))
ey<-e(e(e(y,x3),e(x3,x2)),e(e(y,x4),e(x4,x2)))
ex<-e(e(e(x,x3),e(x3,x2)),e(e(x,x4),e(x4,x2)))
sum(ey*ex)/sum(ex^2)
resid
?resid
library(rgl)
data(Fertility)
x<-seq(10,10,length=1000)
p<-exp(b0+b1*x)/(1+exp(b0+b1*x))
manipulate(fun<-exp(b0+b1*x)/(1+exp(b0+b1*x))
)
amnipulate(
)
manipulate(
plot(x,exp(b0 + b1 * x)/(1 + exp(b0 + b1 * x))),type="l",lwd=3,frame=FALSE),b0=slider(-2,2,step=.1),b0=slider(-2,2,step=.1))
x
manipulate(plot(x,exp(b0 + b1 * x)/(1 + exp(b0 + b1 * x))),type="l",lwd=3,frame=FALSE),b0=slider(-2,2,step=.1),b0=slider(-2,2,step=.1))
myplot<-function(b0,b1){
plot(x,exp(b0 + b1 * x)/(1 + exp(b0 + b1 * x))),type="l",lwd=3,frame=FALSE),
}
myplot<-function(b0,b1){
plot(x,exp(b0 + b1 * x)/(1 + exp(b0 + b1 * x)),type="l",lwd=3,frame=FALSE),
}
myplot<-function(b0,b1){
plot(x,exp(b0 + b1 * x)/(1 + exp(b0 + b1 * x)),type="l",lwd=3,frame=FALSE)
}
manipulate(myplot(b0,b1),b0=slider(-2,2,step=.1),b0=slider(-2,2,step=.1))
library(manipulate)
manipulate(myplot(b0,b1),b0=slider(-2,2,step=.1),b0=slider(-2,2,step=.1))
manipulate(myplot(b0,b1),b0=slider(-2,2,step=.1),b1=slider(-2,2,step=.1))
myplot<-function(b0,b1){
plot(x,exp(b0 + b1 * x)/(1 + exp(b0 + b1 * x)),type="l",lwd=3)
}
manipulate(myplot(b0,b1),b0=slider(-2,2,step=.1),b1=slider(-2,2,step=.1))
x
manipulate(myplot(b0,b1),b0=slider(-2,2,step=.1),b1=slider(-2,2,step=.1))
plot(0:10,dpois(0:10,lambda=2),type="h",frame=FALSE)
plot(0:10,dpois(0:10,lambda=2),type="h",frame=FALSE)
plot(0:20,dpois(0:20,lambda=10),type="h",frame=FALSE)
plot(0:100,dpois(0:100,lambda=50
)
)
library(shiny)
set.seed(31)
lambda<-.2
n<-40
simulation<-1000
simulated<-replicate(simulation,rexp(n,lambda))
means<-apply(simulated,2,mean)
means
simulated
means<-apply(simulated,2,mean)
#dist mean
dist_mean<-mean(means)
means
dist_mean
theorymean<-1/lambda
theorymean
hist(means,xlab="mean",main="exp function simulation")
abline(v=theorymean,col="black")
abline(v=dist_mean,col="red")
std_dev<-sd(means)
std_dev
#sd of analytical
std_theory<-(1/lambda)/sqrt(n)
std_theory
#variance of dist
var_dist<-std_dev^2
var_dist
#var of analytical
var_theory<-((1/lambda)*(1/sqrt(n)))^2
var_theory
xfit <- seq(min(means), max(means), length=100)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda/sqrt(n)))
hist(means,breaks=n,prob=T,col="red",xlab = "means",main="Density of means",ylab="density")
lines(xfit, yfit, pch=22, col="black", lty=5)
hist(means,breaks=n,prob=T,col="red",xlab = "means",main="Density of means",ylab="density")
hist(means,breaks=n,col="red",xlab = "means",main="Density of means",ylab="density")
hist(means,breaks=n/2,prob=T,col="red",xlab = "means",main="Density of means",ylab="density")
hist(means,breaks=n,prob=T,col="red",xlab = "means",main="Density of means",ylab="density")
lines(xfit, yfit, pch=22, col="black", lty=5)
qqnorm(means)
qqline(means, col = 2)
library(ggplot2)
data("ToothGrowth")
summary(ToothGrowth)
unique(ToothGrowth$len)
unique(ToothGrowth$supp)
unique(ToothGrowth$dose)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
head(ToothGrowth)
ggplot(aes(x=dose, y=len), data=ToothGrowth) + geom_boxplot(aes(fill=dose)) + xlab("Dose Amount") + ylab("Tooth Length") + facet_grid(~ supp) + ggtitle("Tooth Length vs. Dose Amount \nby Delivery Method") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
ggplot(aes(x=supp, y=len), data=ToothGrowth) + geom_boxplot(aes(fill=supp)) + xlab("Supplement Delivery") + ylab("Tooth Length") + facet_grid(~ dose) + ggtitle("Tooth Length vs. Delivery Method \nby Dose Amount") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
t.test(len~supp,data=ToothGrowth)
ToothGrowth_sub <- subset(ToothGrowth, ToothGrowth$dose %in% c(1.0,0.5))
t.test(len~dose,data=ToothGrowth_sub)
ToothGrowth_sub <- subset(ToothGrowth, ToothGrowth$dose %in% c(0.5,2.0))
t.test(len~dose,data=ToothGrowth_sub)
ToothGrowth_sub <- subset(ToothGrowth, ToothGrowth$dose %in% c(1.0,2.0))
t.test(len~dose,data=ToothGrowth_sub)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
mtcars
z.cols<-cut(mtcars$am,2,c("red","blue"))
z.cols
plot(mtcars$wt, mtcars$mpg, col=as.character(z.cols))
plot(mtcars$wt, mtcars$mpg, col=as.character(z.cols))
a<-rnorm(50)
b<-rnorm(50)
x<-as.matrix(a,b)
plot(x)
kmeans(x,3)
model<-kmeans(x,3)
model.weights()
model.weights
model.weights
model<-kmeans(x,3)
summary(model)
model$centers
model$withinss
model<-kmeans(x,3,ittr.max=3)
?kmeans
model<-kmeans(x,3,iter.max=3)
model$withinss
model<-kmeans(x,3,iter.max=6)
model$withinss
model<-kmeans(x,3,iter.max=60)
model$withinss
kmeans.wss.s<-function(d,k){
km<-kmenas(d,k)
return(sum(kmeans$withiness))
}
kmeans.wss.s(x,3)
kmeans.wss.s<-function(d,k){
+ km<-kmeans(d,k)
+ return(sum(kmeans$withiness))
}
kmeans.wss.s(x,3)
kmeans.wss.s<-function(d,k){
+ km<-kmeans(d,k)
+ return(sum(km$withiness))
}
kmeans.wss.s(x,3)
kmeans.wss.s<-function(d,k){
km<-kmeans(d,k)
return(sum(km$withiness))}
kmeans.wss.s(x,3)
x
dim(x)
x<-as.matrix(a,b)
dim(x)
plot(x)
class(x)
m
model$cluster
model$withinss
kmeans.wss.s<-function(d,k){
km<-kmeans(d,k)
return(sum(km$withinss))}
kmeans.wss.s(x,3)
model$withinss
sapply(1:10,kmeans.wss.s)
fun<-function(k){
}
fun<-function(){
for k %in% 1:10{}
fun<-function(){
for k %in% 1:10{
kmeans.wss.s<-function(d,k){
for (i in 1:k){
km<-kmeans(d,i)
return(sum(km$withinss))
}
}
kmeans.wss.s
kmeans.wss.s(x,10)
vec<-c('a')
vec=c(vec,'b')
vec
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,km$withinss)
}
return vec
}
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,km$withinss)
}
vec
}
kmeans.wss.s(x,5)
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-sum(kmeans(d,i))
vec=c(vec,km$withinss)
}
vec
}
kmeans.wss.s(x,5)
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
vec
}
kmeans.wss.s(x,5)
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
}
kmeans.wss.s(x,5)
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
return (vec)
}
kmeans.wss.s(x,5)
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
print("hello"+vec)
return (vec)
}
kmeans.wss.s(x,5)
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
print("hello"+str(vec)
return (vec)
}
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
print("hello"+str(vec))
return (vec)
}
kmeans.wss.s(x,5)
kmeans.wss.s<-function(d,k){
vec=vector("numeric",length=k)
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
vec
}
kmeans.wss.s(x,5)
sum(kmeans(x,1)$withinss)
sum(kmeans(x,2)$withinss)
sum(kmeans(x,3)$withinss)
sum(kmeans(x,4)$withinss)
vec
vec
xx<-kmeans.wss.s(x,5)
xx
class(xx)
kmeans.wss.s<-function(d,k){
vec=vector("numeric")
for (i in 1:k){
km<-kmeans(d,i)
vec=c(vec,sum(km$withinss))
}
vec
}
xx<-kmeans.wss.s(x,5)
xx
plot(xx)
plot(xx,type="b")
a<-c("hi how are you")
a1<-c("hi I am fine 900, how are you?")
a2<-c("hello there HOW IS YOUR DAY")
d<-rbind(a,a1,a2)
d
d1<-as.data.frame(d)
class(d1)
library(tm)
library(NLP)
library(tm)
d2<-Corpus(VectorSource(d1$V1))
d2
str(d1)
d3<-DocumentTermMatrix(d2)
d3
d3$dimnames
d
d3$nrow
d3$ncol
d3
d3$v
d3$i
d3$j
d2
inspect(d3)
d
distMatrix(d3)
d1
tm_map(d1,tolower)
tm_map(d2,tolower)
d22<-tm_map(d2,tolower)
d22
d222<-DocumentTermMatrix(d22)
inspect(d222)
d
d22
inspect(d22)
d
inspect(d222)
d
d22<-tm_map(d2,stopwords(kind="dk"))
d22<-tm_map(d2,stopwords(c('a')))
d22<-tm_map(d2,c('a'))
weightTfIdf(d222)
d2222<-weightTfIdf(d222)
inspect(d2222)
d
log(3/2)+1
.25*1.405465
.33*1.405465
inspect(d2222)
d
log3+1
log(3)+1
(1/3)*(log(3)+1)
log(2.71)
(1/5)*(log(3)+1)
(1/6)*(log(3)+1)
(1/7)*(log(3)+1)
(1/5)*(log(3)+1)
.3169925/(1+log(3/2))
1/.2255428
?weightTfIdf
(1/5)*(log(3))
(1/6)*(log(3))
inspect(d2222)
d
(1/6)*(log(3)+1)
(1/7)*(log(3)+1)
(1/7)*(log(3))
(1/6)*(log(3))
(1/6)*(log(3)+1)
(1/5)*(log(3))
(1/9)*(log(3)+1)
d2222$dimnames
(1/8)*(log(3)+1)
(1/7)*(log(3)+1)
inspect(d2222)
(1/6)*(log(3)+1)
(1/4)*(log(3/2)+1)
d
(1/3)*(log(3/2)+1)
(1/5)*(log(3/2)+1)
(1/6)*(log(3/2)+1)
(1/7)*(log(3/2)+1)
inspect(d222)
(1/3)*(log(3/3))
(1/3)*(log(3/5))
(1/3)*(log(3/5)+1)
inspect(d222)
inspect(d2222)
(1/5)*(log(3/5)+1)
(1/4)*(log(3/5)+1)
d
.5*(log(4)+1)
(log(4)+1)
(log(4/15))
(1+log(4/14))
(1+log(4/1))
(log(4/2))
d
inspect(d2222)
(1/6)*log(3/2)
(1/5)*log(3/2)
log(3/2)
inspect(d222)
inspect(d222)
d12<-TermDocumentMatrix(d22)
d12
inspect(d12)
d
log(3/2)
log(3/3)
log(3/4)
1+log(3/1)
1+log(3/2)
1+log(3/3)
aa<-c(2.099,1.41,2.099,2.099,2.099,1,2.099,1.41,2.099)
aa%*%d12
aa<-diag(aa)
aa
aa%*%d12
crossprod(aa,d12)
library(leaflet)
install.packages(leaflet)
install.packages("leaflet")
install.packages(leaflet)
library(leaflet)
my_map <- leaflet() %>% addTiles()
my_map <- my_map %>% addMarkers(lat=52.336649, lng= 4.872474, popup="Deloitte Amsterdam")
my_map
my_map <- leaflet() %>% addTiles()
my_map <- my_map %>% addMarkers(lat=22.5839,lng=88.3434, popup="Howrah station Kolkata,India")
my_map
library(plotly)
install.packages(plotly)
install.packages("plotly")
plot(entropy)
entropy<-function(a){}
entropy<-function(a){
-a*log2(a)-(1-a)*log2(1-a)
}
entropy<-function(a){
-a*log2(a)-(1-a)*log2(1-a)
}
plot(entropy)
library(shiny)
shiny
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny)
shiny
setwd("C:\Users\suman\Desktop\datasciencecoursera\developdataproduct\shiny")
setwd("C:\\Users\\suman\\Desktop\\datasciencecoursera\\developdataproduct\\shiny")
shinyApp()
shinyApp()
shinyApp()
runApp()
